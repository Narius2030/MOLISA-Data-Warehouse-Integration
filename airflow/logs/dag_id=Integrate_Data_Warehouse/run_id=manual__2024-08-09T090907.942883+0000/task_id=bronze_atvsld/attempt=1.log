[2024-08-09T09:09:43.469+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-08-09T09:09:43.505+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: Integrate_Data_Warehouse.bronze_atvsld manual__2024-08-09T09:09:07.942883+00:00 [queued]>
[2024-08-09T09:09:43.523+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: Integrate_Data_Warehouse.bronze_atvsld manual__2024-08-09T09:09:07.942883+00:00 [queued]>
[2024-08-09T09:09:43.524+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 1
[2024-08-09T09:09:43.566+0000] {taskinstance.py:2330} INFO - Executing <Task(SQLExecuteQueryOperator): bronze_atvsld> on 2024-08-09 09:09:07.942883+00:00
[2024-08-09T09:09:43.573+0000] {standard_task_runner.py:63} INFO - Started process 4142 to run task
[2024-08-09T09:09:43.576+0000] {standard_task_runner.py:90} INFO - Running: ['airflow', 'tasks', 'run', 'Integrate_Data_Warehouse', 'bronze_atvsld', 'manual__2024-08-09T09:09:07.942883+00:00', '--job-id', '417', '--raw', '--subdir', 'DAGS_FOLDER/etl_ldtbxh.dag.py', '--cfg-path', '/tmp/tmp1xr23zl4']
[2024-08-09T09:09:43.579+0000] {standard_task_runner.py:91} INFO - Job 417: Subtask bronze_atvsld
[2024-08-09T09:09:43.684+0000] {task_command.py:426} INFO - Running <TaskInstance: Integrate_Data_Warehouse.bronze_atvsld manual__2024-08-09T09:09:07.942883+00:00 [running]> on host 45f7764b2bf2
[2024-08-09T09:09:43.840+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='Integrate_Data_Warehouse' AIRFLOW_CTX_TASK_ID='bronze_atvsld' AIRFLOW_CTX_EXECUTION_DATE='2024-08-09T09:09:07.942883+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-08-09T09:09:07.942883+00:00'
[2024-08-09T09:09:43.841+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-08-09T09:09:43.856+0000] {sql.py:276} INFO - Executing: /*** Load stage for dimensions ***/
DO
$$
BEGIN
    /***
        Load Source to stgDimAccident (Bronze)
    ***/
    INSERT INTO "stgDimAccident"(accident_id, reason, factor, career,
                                year, from_date, to_date, 
                                period, report_type, has_support,
                                total_people, total_hasdead, total_female,
                                total_hard_case, total_not_managed, total_female_not_managed,
                                total_dead_not_managed, total_hard_not_managed)
    SELECT
        *
    FROM dblink('host=host.docker.internal dbname=atvsld password=nhanbui user=postgres port=5434', 
                'select * from public.vw_stgdimaccident')
    AS (
        accident_id uuid,
        reason VARCHAR(255),
        factor VARCHAR(255),
        career VARCHAR(255),
        year CHAR(10),
        from_date DATE,
        to_date DATE,
        period CHAR(10),
        report_type VARCHAR(255),
        has_support BOOL,
        total_people INT,
        total_hasdead INT,
        total_female INT,
        total_hard_case INT,
        total_not_managed INT,
        total_female_not_managed INT,
        total_dead_not_managed INT,
        total_hard_not_managed INT,
        created_date TIMESTAMP
    ) 
    WHERE (created_date >= (SELECT MAX(finished_at) FROM "DimAuditForeigned" WHERE status='SUCCESS'));


    /***
        Load Source to stgDimCompany (Bronze)
    ***/
    INSERT INTO "stgDimCompany"(company_id, name, tax_number,
                                unit, business_name, major_name, 
                                ngaycap_GPKD, province_code, district_code, 
                                ward_code, town_code, foreign_name, 
                                email, contact_province, contact_district, 
                                contact_ward, deputy)
    SELECT
        *
    FROM dblink('host=host.docker.internal dbname=atvsld password=nhanbui user=postgres port=5434', 
                'select * from public.vw_stgdimcompany')
    AS (
        company_id uuid,
        name VARCHAR(35),
        tax_number VARCHAR(15),
        unit public.unit_type,
        business_name VARCHAR(35),
        major_name VARCHAR(35),
        ngaycap_GPKD DATE,
        province_code CHAR(5),
        district_code CHAR(5),
        ward_code CHAR(5),
        town_code CHAR(5),
        foreign_name VARCHAR(35),
        email VARCHAR(255),
        contact_province CHAR(5),
        contact_district CHAR(5),
        contact_ward CHAR(5),
        deputy VARCHAR(255),
        created_date TIMESTAMP
    ) 
    WHERE (created_date >= (SELECT MAX(finished_at) FROM "DimAuditForeigned" WHERE status='SUCCESS'));


    /***
        Load Source to stgDimEuqipment (Bronze)
    ***/
    INSERT INTO "stgEquipment"(device_id, year, month,
                            quality_info_id, company_id,
                            device_name, hs_code, technical_feature, 
                            origin, quantity, unit, contract_number, 
                            contract_date, category, management_cerf,
                            issuance_organize, issuance_date, issuance_place,
                            profile_code, page_of_co, import_gate, import_date)
    SELECT
        *
    FROM dblink('host=host.docker.internal dbname=atvsld password=nhanbui user=postgres port=5434', 
                'select * from public.vw_stgdimequipment')
    AS (
        device_id uuid,	-- PK
        year INT,
        month INT,
        quality_info_id uuid,	-- PK
        company_id uuid,
        device_name VARCHAR(35),
        hs_code CHAR(15),
        technical_feature VARCHAR(35),
        origin VARCHAR(35),
        quantity INT,
        unit CHAR(10),
        contract_number VARCHAR(15),
        contract_date DATE,
        category VARCHAR(10),
        management_cerf VARCHAR(15),
        issuance_organize VARCHAR(35),
        issuance_date DATE,
        issuance_place VARCHAR(255),
        profile_code VARCHAR(15),
        page_of_co INT,
        import_gate VARCHAR(255),
        import_date DATE,
        created_date TIMESTAMP
    )
    WHERE (created_date >= (SELECT MAX(finished_at) FROM "DimAuditForeigned" WHERE status='SUCCESS'));
    
EXCEPTION
	WHEN OTHERS THEN
		UPDATE "DimAuditForeigned" 
		SET 
			information = 'ATVSLD Dimension: Something went wrong on running statements. 
							HINT: Check carefully the syntax or selected columns at "SELECT" or "INSERT" clauses',
			status = 'ERROR',
			finished_at = NOW()
		WHERE start_at = (SELECT MAX(start_at) FROM "DimAuditForeigned" WHERE status='ERROR');
-- 		RAISE EXCEPTION  'when wrong with selected columns' USING HINT = 'Check on "SELECT" or "INSERT" statement';

END;
$$;


/*** Load stage for facts ***/
DO
$$
BEGIN
    /***
        Load Source to stgPeriodicalAccidentFact (Bronze)
    ***/
    INSERT INTO "stgPeriodicalAccidentFact"(accident_id, year, month, company_name, compay_foreign_name,
                                            major_name, reason, factor, career, 
                                            total_people, total_hasdead, total_female,
                                            medical_expense, treatment_expense,
                                            indemnify_expense, total_expense,
                                            day_off, assest_harm)
    SELECT
        accident_id, year, month, company_name, compay_foreign_name,
        major_name, reason, factor, career,
        total_people, total_hasdead, total_female,
        medical_expense, treatment_expense,
        indemnify_expense, total_expense,
        day_off, assest_harm
    FROM dblink('host=host.docker.internal dbname=atvsld password=nhanbui user=postgres port=5434', 
                'select * from public.vw_stgperiodicalaccidentfact')
    AS (
        accident_id uuid,
        year INT,
        month INT,
        company_name VARCHAR(35),
        compay_foreign_name VARCHAR(35),
        major_name VARCHAR(35),
        reason VARCHAR(255),
        factor VARCHAR(255),
        career VARCHAR(255),
        total_people INT,
        total_hasdead INT,
        total_female INT,
        medical_expense FLOAT8,
        treatment_expense FLOAT8,
        indemnify_expense FLOAT8,
        total_expense FLOAT8,
        day_off INT,
        assest_harm FLOAT8,
        accident_created_date TIMESTAMP,
        expense_created_date TIMESTAMP
    )
    WHERE (accident_created_date >= (SELECT MAX(finished_at) FROM "DimAuditForeigned" WHERE status='SUCCESS'))
        OR (expense_created_date >= (SELECT MAX(finished_at) FROM "DimAuditForeigned" WHERE status='SUCCESS'));

EXCEPTION
	WHEN OTHERS THEN
		UPDATE "DimAuditForeigned" 
		SET 
			information = 'ATVSLD Fact: Something went wrong on running statements. 
							HINT: Check carefully the syntax or selected columns at "SELECT" or "INSERT" clauses',
			status = 'ERROR',
			finished_at = NOW()
		WHERE start_at = (SELECT MAX(start_at) FROM "DimAuditForeigned" WHERE status='ERROR');

END;
$$;
[2024-08-09T09:09:43.877+0000] {base.py:84} INFO - Using connection ID 'postgres_ldtbxh_stage' for task execution.
[2024-08-09T09:09:43.977+0000] {base.py:84} INFO - Using connection ID 'postgres_ldtbxh_stage' for task execution.
[2024-08-09T09:09:43.998+0000] {sql.py:470} INFO - Running statement: /*** Load stage for dimensions ***/
DO
$$
BEGIN
    /***
        Load Source to stgDimAccident (Bronze)
    ***/
    INSERT INTO "stgDimAccident"(accident_id, reason, factor, career,
                                year, from_date, to_date, 
                                period, report_type, has_support,
                                total_people, total_hasdead, total_female,
                                total_hard_case, total_not_managed, total_female_not_managed,
                                total_dead_not_managed, total_hard_not_managed)
    SELECT
        *
    FROM dblink('host=host.docker.internal dbname=atvsld password=*** user=postgres port=5434', 
                'select * from public.vw_stgdimaccident')
    AS (
        accident_id uuid,
        reason VARCHAR(255),
        factor VARCHAR(255),
        career VARCHAR(255),
        year CHAR(10),
        from_date DATE,
        to_date DATE,
        period CHAR(10),
        report_type VARCHAR(255),
        has_support BOOL,
        total_people INT,
        total_hasdead INT,
        total_female INT,
        total_hard_case INT,
        total_not_managed INT,
        total_female_not_managed INT,
        total_dead_not_managed INT,
        total_hard_not_managed INT,
        created_date TIMESTAMP
    ) 
    WHERE (created_date >= (SELECT MAX(finished_at) FROM "DimAuditForeigned" WHERE status='SUCCESS'));


    /***
        Load Source to stgDimCompany (Bronze)
    ***/
    INSERT INTO "stgDimCompany"(company_id, name, tax_number,
                                unit, business_name, major_name, 
                                ngaycap_GPKD, province_code, district_code, 
                                ward_code, town_code, foreign_name, 
                                email, contact_province, contact_district, 
                                contact_ward, deputy)
    SELECT
        *
    FROM dblink('host=host.docker.internal dbname=atvsld password=*** user=postgres port=5434', 
                'select * from public.vw_stgdimcompany')
    AS (
        company_id uuid,
        name VARCHAR(35),
        tax_number VARCHAR(15),
        unit public.unit_type,
        business_name VARCHAR(35),
        major_name VARCHAR(35),
        ngaycap_GPKD DATE,
        province_code CHAR(5),
        district_code CHAR(5),
        ward_code CHAR(5),
        town_code CHAR(5),
        foreign_name VARCHAR(35),
        email VARCHAR(255),
        contact_province CHAR(5),
        contact_district CHAR(5),
        contact_ward CHAR(5),
        deputy VARCHAR(255),
        created_date TIMESTAMP
    ) 
    WHERE (created_date >= (SELECT MAX(finished_at) FROM "DimAuditForeigned" WHERE status='SUCCESS'));


    /***
        Load Source to stgDimEuqipment (Bronze)
    ***/
    INSERT INTO "stgEquipment"(device_id, year, month,
                            quality_info_id, company_id,
                            device_name, hs_code, technical_feature, 
                            origin, quantity, unit, contract_number, 
                            contract_date, category, management_cerf,
                            issuance_organize, issuance_date, issuance_place,
                            profile_code, page_of_co, import_gate, import_date)
    SELECT
        *
    FROM dblink('host=host.docker.internal dbname=atvsld password=*** user=postgres port=5434', 
                'select * from public.vw_stgdimequipment')
    AS (
        device_id uuid,	-- PK
        year INT,
        month INT,
        quality_info_id uuid,	-- PK
        company_id uuid,
        device_name VARCHAR(35),
        hs_code CHAR(15),
        technical_feature VARCHAR(35),
        origin VARCHAR(35),
        quantity INT,
        unit CHAR(10),
        contract_number VARCHAR(15),
        contract_date DATE,
        category VARCHAR(10),
        management_cerf VARCHAR(15),
        issuance_organize VARCHAR(35),
        issuance_date DATE,
        issuance_place VARCHAR(255),
        profile_code VARCHAR(15),
        page_of_co INT,
        import_gate VARCHAR(255),
        import_date DATE,
        created_date TIMESTAMP
    )
    WHERE (created_date >= (SELECT MAX(finished_at) FROM "DimAuditForeigned" WHERE status='SUCCESS'));
    
EXCEPTION
	WHEN OTHERS THEN
		UPDATE "DimAuditForeigned" 
		SET 
			information = 'ATVSLD Dimension: Something went wrong on running statements. 
							HINT: Check carefully the syntax or selected columns at "SELECT" or "INSERT" clauses',
			status = 'ERROR',
			finished_at = NOW()
		WHERE start_at = (SELECT MAX(start_at) FROM "DimAuditForeigned" WHERE status='ERROR');
-- 		RAISE EXCEPTION  'when wrong with selected columns' USING HINT = 'Check on "SELECT" or "INSERT" statement';

END;
$$;


/*** Load stage for facts ***/
DO
$$
BEGIN
    /***
        Load Source to stgPeriodicalAccidentFact (Bronze)
    ***/
    INSERT INTO "stgPeriodicalAccidentFact"(accident_id, year, month, company_name, compay_foreign_name,
                                            major_name, reason, factor, career, 
                                            total_people, total_hasdead, total_female,
                                            medical_expense, treatment_expense,
                                            indemnify_expense, total_expense,
                                            day_off, assest_harm)
    SELECT
        accident_id, year, month, company_name, compay_foreign_name,
        major_name, reason, factor, career,
        total_people, total_hasdead, total_female,
        medical_expense, treatment_expense,
        indemnify_expense, total_expense,
        day_off, assest_harm
    FROM dblink('host=host.docker.internal dbname=atvsld password=*** user=postgres port=5434', 
                'select * from public.vw_stgperiodicalaccidentfact')
    AS (
        accident_id uuid,
        year INT,
        month INT,
        company_name VARCHAR(35),
        compay_foreign_name VARCHAR(35),
        major_name VARCHAR(35),
        reason VARCHAR(255),
        factor VARCHAR(255),
        career VARCHAR(255),
        total_people INT,
        total_hasdead INT,
        total_female INT,
        medical_expense FLOAT8,
        treatment_expense FLOAT8,
        indemnify_expense FLOAT8,
        total_expense FLOAT8,
        day_off INT,
        assest_harm FLOAT8,
        accident_created_date TIMESTAMP,
        expense_created_date TIMESTAMP
    )
    WHERE (accident_created_date >= (SELECT MAX(finished_at) FROM "DimAuditForeigned" WHERE status='SUCCESS'))
        OR (expense_created_date >= (SELECT MAX(finished_at) FROM "DimAuditForeigned" WHERE status='SUCCESS'));

EXCEPTION
	WHEN OTHERS THEN
		UPDATE "DimAuditForeigned" 
		SET 
			information = 'ATVSLD Fact: Something went wrong on running statements. 
							HINT: Check carefully the syntax or selected columns at "SELECT" or "INSERT" clauses',
			status = 'ERROR',
			finished_at = NOW()
		WHERE start_at = (SELECT MAX(start_at) FROM "DimAuditForeigned" WHERE status='ERROR');

END;
$$;, parameters: None
[2024-08-09T09:09:44.117+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-08-09T09:09:44.138+0000] {taskinstance.py:1206} INFO - Marking task as SUCCESS. dag_id=Integrate_Data_Warehouse, task_id=bronze_atvsld, run_id=manual__2024-08-09T09:09:07.942883+00:00, execution_date=20240809T090907, start_date=20240809T090943, end_date=20240809T090944
[2024-08-09T09:09:44.232+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2024-08-09T09:09:44.304+0000] {taskinstance.py:3498} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-08-09T09:09:44.323+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
