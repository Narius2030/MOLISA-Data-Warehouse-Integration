[2024-08-07T15:33:36.965+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-08-07T15:33:37.011+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: Integrate_Data_Warehouse.bronze_hongheo manual__2024-08-07T15:33:14.644893+00:00 [queued]>
[2024-08-07T15:33:37.028+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: Integrate_Data_Warehouse.bronze_hongheo manual__2024-08-07T15:33:14.644893+00:00 [queued]>
[2024-08-07T15:33:37.028+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 1
[2024-08-07T15:33:37.071+0000] {taskinstance.py:2330} INFO - Executing <Task(SQLExecuteQueryOperator): bronze_hongheo> on 2024-08-07 15:33:14.644893+00:00
[2024-08-07T15:33:37.077+0000] {standard_task_runner.py:63} INFO - Started process 885 to run task
[2024-08-07T15:33:37.082+0000] {standard_task_runner.py:90} INFO - Running: ['airflow', 'tasks', 'run', 'Integrate_Data_Warehouse', 'bronze_hongheo', 'manual__2024-08-07T15:33:14.644893+00:00', '--job-id', '264', '--raw', '--subdir', 'DAGS_FOLDER/etl_ldtbxh.dag.py', '--cfg-path', '/tmp/tmp6feca7m2']
[2024-08-07T15:33:37.085+0000] {standard_task_runner.py:91} INFO - Job 264: Subtask bronze_hongheo
[2024-08-07T15:33:37.232+0000] {task_command.py:426} INFO - Running <TaskInstance: Integrate_Data_Warehouse.bronze_hongheo manual__2024-08-07T15:33:14.644893+00:00 [running]> on host 45f7764b2bf2
[2024-08-07T15:33:37.465+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='Integrate_Data_Warehouse' AIRFLOW_CTX_TASK_ID='bronze_hongheo' AIRFLOW_CTX_EXECUTION_DATE='2024-08-07T15:33:14.644893+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-08-07T15:33:14.644893+00:00'
[2024-08-07T15:33:37.466+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-08-07T15:33:37.485+0000] {sql.py:276} INFO - Executing: -- CREATE EXTENSION dblink;

/*** Load stage for dimensions ***/

BEGIN TRANSACTION;
    /***
        Load Source to stgDimFamily (Bronze)
    **/
    INSERT INTO "stgDimFamily"(family_id, family_code, family_type, years, 
						   province_code, district_code, ward_code, family_number, nation_in_place)
    SELECT 
        family_id, family_code, family_type, years, 
		province_code, district_code, ward_code, family_number, nation_in_place
    FROM dblink('host=host.docker.internal dbname=hongheovna password=nhanbui user=postgres port=5434', 
                'select * from public.vw_stgdimfamily') 
    AS (
        family_id uuid,
        family_code VARCHAR(10),
        family_type VARCHAR(25),
        years SMALLINT,
        province_code CHAR(5),
        province_name VARCHAR(35),
        district_code CHAR(5),
        district_name VARCHAR(35),
        ward_code CHAR(5),
        ward_name VARCHAR(35),
        family_number VARCHAR(20),
        nation_in_place BOOL,
        created_date TIMESTAMP
    )
    WHERE created_date >= (SELECT MAX(finished_at) FROM "DimAuditForeigned");

    /***
        Load Source to stgDimFamilyMember (Bronze)
    ***/
    INSERT INTO "stgDimFamilyMember"(member_id, family_id, full_name, owner_relationship, 
                                    year_of_birth, month_of_birth, day_of_birth, 
                                    identity_card_number, nation, sex, height, weight,
                                    education_status, education_level, culture_level, training_level, has_medical_insurance,
                                    social_assistance, has_job, job_type, has_contract, has_pension)
    SELECT
        member_id, family_id, full_name, owner_relationship, 
        year_of_birth, month_of_birth, day_of_birth, 
        identity_card_number, nation, sex, height, weight,
        education_status, education_level, culture_level, training_level, has_medical_insurance,
        social_assistance, has_job, job_type, has_contract, has_pension
    FROM dblink('host=host.docker.internal dbname=hongheovna password=nhanbui user=postgres port=5434',
                'select * from public.vw_stgdimfamilymember')
    AS (
        member_id uuid,
        family_id uuid,
        full_name VARCHAR(35),
        owner_relationship VARCHAR(15),
        year_of_birth SMALLINT,
        month_of_birth SMALLINT,
        day_of_birth SMALLINT,
        identity_card_number VARCHAR(12),
        nation VARCHAR(15),
        sex BOOL,
        height INT,
        weight INT,
        education_status BOOL,
        education_level public.EDU_LEVEL,
        culture_level public.CUL_LEVEL,
        training_level public.TRAIN_LEVEL,
        has_medical_insurance BOOL,
        social_assistance public.TCXH,
        has_job public.JOB_STATUS,
        job_type public.JOB_CATE,
        has_contract public.CONTRACT_TYPE,
        has_pension public.PENSION_TYPE,
        created_date TIMESTAMP
    )
    WHERE created_date >= (SELECT MAX(finished_at) FROM "DimAuditForeigned");


    /***
        Load Source to stgDimFamilyMember (Bronze)
    ***/
    INSERT INTO "stgDimSurvey"(family_id, year, month,
                                    a_id, fast_classify_person, 					
                                    condition_codes, condition_names, b1_id, is_aquaculture, 
                                    electricity_source, water_source, reason_names, get_policy_names,
                                    need_policy_names, a_grade, b1_grade, b2_grade,
                                    final_result, classify_person)
    SELECT
        *
    FROM dblink('host=host.docker.internal dbname=hongheovna password=nhanbui user=postgres port=5434', 
                'select * from public.vw_stgdimsurvey')
    AS (
        family_id uuid,
        year INT,
        month INT,
        a_id uuid,
        fast_classify_person VARCHAR(35),
        condition_codes CHAR(5)[],
        condition_names VARCHAR(255)[],
        b1_id uuid,
        is_aquaculture BOOL,
        electricity_source CHAR(5),
        water_source CHAR(5),
        reason_names VARCHAR(255)[],
        get_policy_names VARCHAR(255)[],
        need_policy_names VARCHAR(255)[],
        a_grade BOOL,
        b1_grade SMALLINT,
        b2_grade SMALLINT,
        final_result public.CLASSIFICATION,
        classify_person VARCHAR(35)
    );
COMMIT;


/*** Load stage for facts ***/
[2024-08-07T15:33:37.502+0000] {base.py:84} INFO - Using connection ID 'postgres_ldtbxh_stage' for task execution.
[2024-08-07T15:33:37.621+0000] {base.py:84} INFO - Using connection ID 'postgres_ldtbxh_stage' for task execution.
[2024-08-07T15:33:37.643+0000] {sql.py:470} INFO - Running statement: -- CREATE EXTENSION dblink;

/*** Load stage for dimensions ***/

BEGIN TRANSACTION;
    /***
        Load Source to stgDimFamily (Bronze)
    **/
    INSERT INTO "stgDimFamily"(family_id, family_code, family_type, years, 
						   province_code, district_code, ward_code, family_number, nation_in_place)
    SELECT 
        family_id, family_code, family_type, years, 
		province_code, district_code, ward_code, family_number, nation_in_place
    FROM dblink('host=host.docker.internal dbname=hongheovna password=*** user=postgres port=5434', 
                'select * from public.vw_stgdimfamily') 
    AS (
        family_id uuid,
        family_code VARCHAR(10),
        family_type VARCHAR(25),
        years SMALLINT,
        province_code CHAR(5),
        province_name VARCHAR(35),
        district_code CHAR(5),
        district_name VARCHAR(35),
        ward_code CHAR(5),
        ward_name VARCHAR(35),
        family_number VARCHAR(20),
        nation_in_place BOOL,
        created_date TIMESTAMP
    )
    WHERE created_date >= (SELECT MAX(finished_at) FROM "DimAuditForeigned");

    /***
        Load Source to stgDimFamilyMember (Bronze)
    ***/
    INSERT INTO "stgDimFamilyMember"(member_id, family_id, full_name, owner_relationship, 
                                    year_of_birth, month_of_birth, day_of_birth, 
                                    identity_card_number, nation, sex, height, weight,
                                    education_status, education_level, culture_level, training_level, has_medical_insurance,
                                    social_assistance, has_job, job_type, has_contract, has_pension)
    SELECT
        member_id, family_id, full_name, owner_relationship, 
        year_of_birth, month_of_birth, day_of_birth, 
        identity_card_number, nation, sex, height, weight,
        education_status, education_level, culture_level, training_level, has_medical_insurance,
        social_assistance, has_job, job_type, has_contract, has_pension
    FROM dblink('host=host.docker.internal dbname=hongheovna password=*** user=postgres port=5434',
                'select * from public.vw_stgdimfamilymember')
    AS (
        member_id uuid,
        family_id uuid,
        full_name VARCHAR(35),
        owner_relationship VARCHAR(15),
        year_of_birth SMALLINT,
        month_of_birth SMALLINT,
        day_of_birth SMALLINT,
        identity_card_number VARCHAR(12),
        nation VARCHAR(15),
        sex BOOL,
        height INT,
        weight INT,
        education_status BOOL,
        education_level public.EDU_LEVEL,
        culture_level public.CUL_LEVEL,
        training_level public.TRAIN_LEVEL,
        has_medical_insurance BOOL,
        social_assistance public.TCXH,
        has_job public.JOB_STATUS,
        job_type public.JOB_CATE,
        has_contract public.CONTRACT_TYPE,
        has_pension public.PENSION_TYPE,
        created_date TIMESTAMP
    )
    WHERE created_date >= (SELECT MAX(finished_at) FROM "DimAuditForeigned");


    /***
        Load Source to stgDimFamilyMember (Bronze)
    ***/
    INSERT INTO "stgDimSurvey"(family_id, year, month,
                                    a_id, fast_classify_person, 					
                                    condition_codes, condition_names, b1_id, is_aquaculture, 
                                    electricity_source, water_source, reason_names, get_policy_names,
                                    need_policy_names, a_grade, b1_grade, b2_grade,
                                    final_result, classify_person)
    SELECT
        *
    FROM dblink('host=host.docker.internal dbname=hongheovna password=*** user=postgres port=5434', 
                'select * from public.vw_stgdimsurvey')
    AS (
        family_id uuid,
        year INT,
        month INT,
        a_id uuid,
        fast_classify_person VARCHAR(35),
        condition_codes CHAR(5)[],
        condition_names VARCHAR(255)[],
        b1_id uuid,
        is_aquaculture BOOL,
        electricity_source CHAR(5),
        water_source CHAR(5),
        reason_names VARCHAR(255)[],
        get_policy_names VARCHAR(255)[],
        need_policy_names VARCHAR(255)[],
        a_grade BOOL,
        b1_grade SMALLINT,
        b2_grade SMALLINT,
        final_result public.CLASSIFICATION,
        classify_person VARCHAR(35)
    );
COMMIT;


/*** Load stage for facts ***/, parameters: None
[2024-08-07T15:33:37.793+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-08-07T15:33:37.795+0000] {taskinstance.py:2905} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.11/site-packages/airflow/models/taskinstance.py", line 465, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.11/site-packages/airflow/models/taskinstance.py", line 432, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.11/site-packages/airflow/models/baseoperator.py", line 400, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.11/site-packages/airflow/providers/common/sql/operators/sql.py", line 282, in execute
    output = hook.run(
             ^^^^^^^^^
  File "/home/airflow/.local/lib/python3.11/site-packages/airflow/providers/common/sql/hooks/sql.py", line 418, in run
    self._run_command(cur, sql_statement, parameters)
  File "/home/airflow/.local/lib/python3.11/site-packages/airflow/providers/common/sql/hooks/sql.py", line 475, in _run_command
    cur.execute(sql_statement)
psycopg2.errors.DatatypeMismatch: remote query result rowtype does not match the specified FROM clause rowtype

[2024-08-07T15:33:37.818+0000] {taskinstance.py:1206} INFO - Marking task as FAILED. dag_id=Integrate_Data_Warehouse, task_id=bronze_hongheo, run_id=manual__2024-08-07T15:33:14.644893+00:00, execution_date=20240807T153314, start_date=20240807T153337, end_date=20240807T153337
[2024-08-07T15:33:37.870+0000] {standard_task_runner.py:110} ERROR - Failed to execute job 264 for task bronze_hongheo (remote query result rowtype does not match the specified FROM clause rowtype
; 885)
[2024-08-07T15:33:37.900+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 1
[2024-08-07T15:33:37.935+0000] {taskinstance.py:3498} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2024-08-07T15:33:37.957+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
